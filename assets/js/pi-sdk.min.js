window.Pi = {
    init: function (config) {
        console.log("Pi Network SDK inicializado con configuración:", config);
    },

    authenticate: function (scopes, onIncompletePaymentFound) {
        return new Promise((resolve, reject) => {
            console.log("Autenticando usuario con scopes:", scopes);
            // Simulación de respuesta de autenticación
            setTimeout(() => {
                resolve({
                    accessToken: "FAKE_ACCESS_TOKEN_123",
                    user: { uid: "fake_uid_123", username: "UsuarioPi" }
                });
            }, 1000);
        });
    },

    createPayment: function (paymentData, paymentCallbacks) {
        console.log("Creando pago con datos:", paymentData);
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                console.log("Pago aprobado en servidor:", paymentData);
                if (paymentCallbacks.onReadyForServerApproval) {
                    paymentCallbacks.onReadyForServerApproval("FAKE_PAYMENT_ID_123");
                }

                setTimeout(() => {
                    console.log("Pago completado con éxito");
                    if (paymentCallbacks.onReadyForServerCompletion) {
                        paymentCallbacks.onReadyForServerCompletion("FAKE_PAYMENT_ID_123", "FAKE_TX_ID_456");
                    }
                    resolve({ paymentId: "FAKE_PAYMENT_ID_123", status: "COMPLETED" });
                }, 2000);
            }, 2000);
        });
    }
};